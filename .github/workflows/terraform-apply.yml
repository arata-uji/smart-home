name: Terraform Apply

on:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  TF_VAR_project: ${{ secrets.GCP_PROJECT_ID }}

defaults:
  run:
    working-directory: terraform

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "latest"

      - name: Terraform Init
        run: terraform init -backend-config="bucket=${{ secrets.TFSTATE_BUCKET_NAME }}"

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -input=false -detailed-exitcode -out=tfplan
          CODE=$?
          if [ $CODE -eq 1 ]; then
            echo "Terraform plan failed"
            exit 1
          fi
          if [ $CODE -eq 2 ]; then
            echo "has_changes=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_changes=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Upload Plan Artifact
        if: steps.plan.outputs.has_changes == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

    outputs:
      has_changes: ${{ steps.plan.outputs.has_changes }}


  terraform-apply:
    name: Terraform Apply
    needs: terraform-plan
    runs-on: ubuntu-latest
    environment: production
    if: needs.terraform-plan.outputs.has_changes == 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "latest"

      - name: Terraform Init
        run: terraform init -backend-config="bucket=${{ secrets.TFSTATE_BUCKET_NAME }}"

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: .

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false tfplan
